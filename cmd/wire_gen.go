// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"play-together/config"
	"play-together/internal/handler"
	"play-together/internal/repository"
	"play-together/internal/routes"
	"play-together/internal/server"
	"play-together/internal/service"

	"github.com/gin-gonic/gin"
)

// Injectors from wire.go:

func InitializeServer() (*server.Server, error) {
	configConfig := config.LoadConfig()
	firebaseClient, err := config.NewFirebaseClient(configConfig)
	if err != nil {
		return nil, err
	}
	loginRepository := repository.NewLoginRepository(firebaseClient)
	loginHandler := handler.NewLoginHandler(loginRepository)
	loginService := service.NewLoginService(loginHandler)
	healthService := service.NewHealthService()
	postRepository := repository.NewPostRepository(firebaseClient)
	postHandler := handler.NewPostHandler(postRepository)
	postService := service.NewPostService(postHandler)
	chatRepository := repository.NewChatRepository(firebaseClient)
	chatHandler := handler.NewChatHandler(chatRepository)
	chatService := service.NewChatService(chatHandler)
	requestRepository := repository.NewRequestRepository(firebaseClient)
	requestHandler := handler.NewRequestHandler(requestRepository)
	requestService := service.NewRequestService(requestHandler)
	engine := provideRouter(firebaseClient, loginService, healthService, postService, chatService, requestService)
	string2 := providePortFromConfig(configConfig)
	serverServer := server.NewServer(engine, string2)
	return serverServer, nil
}

// wire.go:

func providePortFromConfig(cfg *config.Config) string {
	return cfg.Port
}

func provideRouter(
	firebaseClient *config.FirebaseClient,
	loginService *service.LoginService,
	healthService *service.HealthService,
	postService *service.PostService,
	chatService *service.ChatService,
	requestService *service.RequestService,

) *gin.Engine {
	return routes.SetupRouter(firebaseClient, loginService, healthService, postService, chatService, requestService)
}
